---
// Component Imports
// import Tour from '../components/Tour.astro';
// You can import components from any supported Framework here!
// import SvelteCounter from '../components/SvelteCounter.svelte';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'My Astro Site - now with a theme';

const { content } = Astro.props;

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

---
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<title>{title}</title>

	<link rel="icon" type="image/x-icon" href="/favicon.ico" />
	<link rel="stylesheet" href={Astro.resolve('../styles/global.scss')}>
	<link rel="stylesheet" href={Astro.resolve('../styles/home.scss')}>

	<style>
		header {
			display: flex;
			flex-direction: column;
			gap: 1em;
			max-width: min(100%, 68ch);
            position: relative;
		}
        .container {
            display: flex;
			flex-direction: column;
			gap: 1em;
			max-width: min(100%, 68ch);
            position: relative;
        }

        .blog-header{
            width: 100%;
            height: 300px;
            background-image: linear-gradient(360deg, black, transparent);
            position: relative;
        }
        .blog-header h1{
            position: absolute;
            color: #fff;
            margin: 40px auto;
            left: 0;
            padding: 10px 50px;
            text-shadow: 0 0 3px var(--primary);
            line-break: strict;
            text-align: center;
            top: 0;
        }

        .blog-header-img{
            width: 100%;
            max-width: 800px;
            height: 300px;
            object-fit: cover;
            z-index: 0;
            mix-blend-mode: multiply;
        }

        ul.taglist{
            list-style-type: none;
            display: flex;
            flex-direction: row;
            font-size: 20px;
            gap: 1rem;
        }

        li.tags{
            padding: 0.2rem 0.8rem;
            color: white;
            background-color: var(--primary);
            border-radius: 10px;
            }
            span.date{
            position: absolute;
            right: 0;
            top: 48px;
            z-index: 1;
            font-size: 16px;
            background-color: var(--primary);
            opacity: 0.75;
            border-radius: 0 0 0 10px;
            padding: 10px;
            color: #fff
        }

	</style>
</head>
<body>
	<main>
		<header>
			<div>
            <nav><ul>
                <li class="navigation-item"><a href="/">Home</a></li>
                <li class="navigation-item"><a href="/subpage">Subpage</a></li>
                <li class="navigation-item"><a href="/blogs">blogs</a></li>
            </ul></nav>
            <span class="date">{content.date }</span>
            <div class="blog-header">
            <img class="blog-header-img" src={content.image}>
				<h1>{content.title}</h1>
            </div>

                <h2>{content.description}</h2>
                <ul class="taglist">
                {content.tags.slice(0, 3).map((tag) => (
                    <li class="tags">{tag}</li>
                ))}
                </ul>
			</div>
		</header>
<div class="container">
<slot/>
		<!--

		You can also use imported framework components directly in your markup!

		Note: by default, these components are NOT interactive on the client.
		The `:visible` directive tells Astro to make it interactive.

		See https://docs.astro.build/core-concepts/component-hydration/

		-->

</div>
	</main>
</body>
</html>
